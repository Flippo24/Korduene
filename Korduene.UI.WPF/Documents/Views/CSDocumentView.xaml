<customcontrols:UserControlEx 
            x:Class="Korduene.UI.WPF.Documents.Views.CSDocumentView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:local="clr-namespace:Korduene.UI.WPF.Documents.Views"
            xmlns:wpf="clr-namespace:Korduene.Graphing.UI.WPF;assembly=Korduene.Graphing.UI.WPF"
            xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
            xmlns:customcontrols="clr-namespace:Korduene.UI.WPF.CustomControls"
            xmlns:korduene="clr-namespace:Korduene;assembly=Korduene.Core" 
            xmlns:designer="clr-namespace:ICSharpCode.WpfDesign.Designer;assembly=ICSharpCode.WpfDesign.Designer" 
            xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock" 
            xmlns:converters="clr-namespace:Korduene.Graphing.UI.WPF.Converters;assembly=Korduene.Graphing.UI.WPF"
            mc:Ignorable="d"
            d:DesignHeight="450" d:DesignWidth="800">
    <customcontrols:UserControlEx.Resources>
        <avalonDock:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />
    </customcontrols:UserControlEx.Resources>

    <avalonDock:DockingManager AllowMixedOrientation="True">
        <avalonDock:DockingManager.DocumentPaneControlStyle>
            <Style TargetType="{x:Type avalonDock:LayoutDocumentPaneControl}">
                <Setter Property="TabStripPlacement" Value="Bottom"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type avalonDock:LayoutDocumentPaneControl}">
                            <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <!--Following border is required to catch mouse events-->
                                <Border Background="Transparent" Grid.RowSpan="2"/>
                                <Grid Panel.ZIndex="1" Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <avalonDock:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                                    <avalonDock:DropDownButton
                            x:Name="MenuDropDownButton"
                            Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                            Focusable="False"
                            Grid.Column="1">
                                        <avalonDock:DropDownButton.DropDownContextMenu>
                                            <avalonDock:ContextMenuEx
                                    ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                                <avalonDock:ContextMenuEx.ItemContainerStyle>
                                                    <Style TargetType="{x:Type avalonDock:MenuItemEx}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                        <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                        <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                        <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                                                        <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                        <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                                    </Style>
                                                </avalonDock:ContextMenuEx.ItemContainerStyle>
                                            </avalonDock:ContextMenuEx>
                                        </avalonDock:DropDownButton.DropDownContextMenu>
                                        <Image Source="/AvalonDock;component/Images/PinDocMenu.png"/>
                                    </avalonDock:DropDownButton>
                                </Grid>
                                <Border x:Name="ContentPanel" 
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch"  
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Grid.Column="0" 
                            KeyboardNavigation.DirectionalNavigation="Contained" 
                            Grid.Row="0"
                            KeyboardNavigation.TabIndex="2" 
                            KeyboardNavigation.TabNavigation="Cycle">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" 
                                          ContentSource="SelectedContent" 
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Visibility" Value="{Binding IsVisible, Converter={converters:BoolToVisibilityConverter}}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <avalonDock:LayoutDocumentTabItem Model="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <avalonDock:LayoutDocumentControl Model="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </avalonDock:DockingManager.DocumentPaneControlStyle>

        <avalonDock:DockingManager.Theme>
            <avalonDock:Vs2013LightTheme />
        </avalonDock:DockingManager.Theme>

        <avalonDock:LayoutRoot>
            <avalonDock:LayoutPanel Orientation="Horizontal">

                <avalonDock:LayoutDocumentPaneGroup>
                    <avalonDock:LayoutDocumentPane>
                        <avalonDock:LayoutDocument Title="Graph" CanClose="False">
                            <wpf:GraphControl x:Name="graphControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </avalonDock:LayoutDocument>
                        <avalonDock:LayoutDocument Title="Code" CanClose="False">
                            <customcontrols:TextEditorEx Document="{Binding AvalonDocument}" />
                        </avalonDock:LayoutDocument>
                    </avalonDock:LayoutDocumentPane>
                </avalonDock:LayoutDocumentPaneGroup>
                
            </avalonDock:LayoutPanel>

        </avalonDock:LayoutRoot>
    </avalonDock:DockingManager>


    <!--<TabControl TabStripPlacement="Bottom">
        <TabItem Header="Graph" IsSelected="{Binding IsGraphActive, FallbackValue=True}">
            <wpf:GraphControl x:Name="graphControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
        </TabItem>
        <TabItem Header="Code" IsSelected="{Binding IsCodeActive, FallbackValue=False}">
            <customcontrols:TextEditorEx Document="{Binding AvalonCodeDocument}" />
        </TabItem>
    </TabControl>-->
</customcontrols:UserControlEx>
