<local:MemberContainer x:Class="Korduene.Graphing.UI.WPF.CommentContainer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Korduene.Graphing.UI.WPF"
             xmlns:graphing="clr-namespace:Korduene.Graphing;assembly=Korduene.Graphing"
             xmlns:converters="clr-namespace:Korduene.Graphing.UI.WPF.Converters"
             xmlns:templateselectors="clr-namespace:Korduene.Graphing.UI.WPF.DataTemplateSelectors"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="140"
             
             Left="{Binding Location.X}" 
             Top="{Binding Location.Y}" 
             Opacity="{Binding Opacity}"
             Canvas.ZIndex="{Binding ZIndex}">
    <local:MemberContainer.Resources>
        <Color x:Key="gridColor" B="40" G="40" R="40"></Color>
        <converters:BezierPointsConverter x:Key="bezierPointsConverter"></converters:BezierPointsConverter>
        <converters:ActualWidthConverter x:Key="actualWidthConverter"></converters:ActualWidthConverter>
        <converters:GraphPointConverter x:Key="graphPointConverter"></converters:GraphPointConverter>
        <converters:PortTypeToColumnConverter x:Key="portTypeToColumnConverter"></converters:PortTypeToColumnConverter>
        <converters:RowIndexConverter x:Key="rowIndexConverter"></converters:RowIndexConverter>
        <converters:HexToSolidBrushConverter x:Key="hexToSolidConverter"></converters:HexToSolidBrushConverter>
        <converters:BoolToVisibilityConverter x:Key="visibilityToBoolConverter"></converters:BoolToVisibilityConverter>
        <templateselectors:GraphDataTemplateSelector x:Key="templateSelector"></templateselectors:GraphDataTemplateSelector>




    </local:MemberContainer.Resources>

    <local:MemberContainer.Visibility>
        <Binding Path="IsVisible" Converter="{StaticResource visibilityToBoolConverter}"></Binding>
    </local:MemberContainer.Visibility>

    <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Border x:Name="comment" Grid.Row="1" BorderBrush="{Binding BorderColor, Converter={converters:GraphColorToSolidBrushConverter}, FallbackValue=#FFF}" 
                    Background="{Binding BackgroundColor, Converter={converters:GraphColorToSolidBrushConverter}}"
                    MinHeight="{Binding Source={x:Static graphing:Constants.NODE_MIN_HEIGHT}}" 
                    MinWidth="{Binding Source={x:Static graphing:Constants.NODE_MIN_WIDTH}}"
                    BorderThickness="{Binding Source={x:Static graphing:Constants.NODE_BORDER_THICKNESS}}" 
                    CornerRadius="{Binding Source={x:Static graphing:Constants.NODE_CORNER_RADIUS}}">

        <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightGray" >

            <!--#region Header-->

            <Grid>
                <Border Grid.Column="1"
                                    BorderBrush="{Binding Source={x:Static graphing:Constants.COMMENT_BORDER}, Converter={converters:GraphColorToSolidBrushConverter}, FallbackValue=#FFF}" 
                                    BorderThickness="0,0,0,1"
                                    CornerRadius="4.5,4.5,0,0"
                                    Padding="1" 
                                    Background="{Binding Source={x:Static graphing:Constants.COMMENT_HEADER}, Converter={converters:GraphColorToSolidBrushConverter}, FallbackValue=#BDBDBD}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="tbComment" Grid.Column="1" Grid.ColumnSpan="2" FontFamily="Segoe UI" Foreground="White" TextTrimming="CharacterEllipsis" Margin="5, -1, 5, 0" Text="{Binding Text, FallbackValue=Comment}" PreviewMouseLeftButtonDown="tbComment_PreviewMouseLeftButtonDown">
                            <!--<TextBlock.Triggers>
                                <Trigger Property="TextBox.Visibility" Value="Visible">
                                    <Setter TargetName="txtComment" Property="TextBox.Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="TextBox.Visibility" Value="Collapsed">
                                    <Setter TargetName="txtComment" Property="TextBox.Visibility" Value="Visible"></Setter>
                                </Trigger>
                            </TextBlock.Triggers>-->
                        </TextBlock>
                        <TextBox x:Name="txtComment" Grid.Column="1" Grid.ColumnSpan="2" FontFamily="Segoe UI" Foreground="Black" Margin="5, -1, 5, 0" Text="{Binding Text, FallbackValue=Comment}" Visibility="Collapsed" PreviewKeyUp="txtComment_PreviewKeyUp">
                            <!--<TextBox.Triggers>
                                <Trigger Property="TextBox.Visibility" Value="Visible">
                                    <Setter TargetName="tbComment" Property="TextBlock.Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="TextBox.Visibility" Value="Collapsed">
                                    <Setter TargetName="tbComment" Property="TextBlock.Visibility" Value="Visible"></Setter>
                                </Trigger>
                            </TextBox.Triggers>-->
                        </TextBox>
                    </Grid>


                </Border>

            </Grid>

            <!--#endregion Header-->

            <!--#region Body-->

        </StackPanel>
    </Border>

</local:MemberContainer>
