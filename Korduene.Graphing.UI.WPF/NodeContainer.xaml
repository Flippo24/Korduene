<local:MemberContainer x:Class="Korduene.Graphing.UI.WPF.NodeContainer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Korduene.Graphing.UI.WPF"
             xmlns:graphing="clr-namespace:Korduene.Graphing;assembly=Korduene.Graphing"
             xmlns:converters="clr-namespace:Korduene.Graphing.UI.WPF.Converters"
             xmlns:templateselectors="clr-namespace:Korduene.Graphing.UI.WPF.DataTemplateSelectors"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="140"
             
             Left="{Binding Location.X}" 
             Top="{Binding Location.Y}" 
             Opacity="{Binding Opacity}"
             Canvas.ZIndex="{Binding ZIndex}">
    <local:MemberContainer.Resources>
        <Color x:Key="gridColor" B="40" G="40" R="40"></Color>
        <templateselectors:GraphDataTemplateSelector x:Key="templateSelector"></templateselectors:GraphDataTemplateSelector>
    </local:MemberContainer.Resources>

    <local:MemberContainer.Visibility>
        <Binding Path="IsVisible" Converter="{converters:BoolToVisibilityConverter}"></Binding>
    </local:MemberContainer.Visibility>

    <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="auto"/>
    </Grid.RowDefinitions>

    <Border x:Name="node" Grid.Row="0" BorderBrush="{Binding BorderColor, Converter={converters:GraphColorToSolidBrushConverter}, FallbackValue=#00A000}" 
                    Background="{Binding BackgroundColor, Converter={converters:GraphColorToSolidBrushConverter}}"
                    MinHeight="{Binding Source={x:Static graphing:Constants.NODE_MIN_HEIGHT}}" 
                    MinWidth="{Binding Source={x:Static graphing:Constants.NODE_MIN_WIDTH}}"
                    BorderThickness="{Binding Source={x:Static graphing:Constants.NODE_BORDER_THICKNESS}}" 
                    CornerRadius="{Binding Source={x:Static graphing:Constants.NODE_CORNER_RADIUS}}">
        <Border.Effect>
            <DropShadowEffect BlurRadius="10" ShadowDepth="-1" />
        </Border.Effect>

        <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >

            <!--#region Header-->

            <Grid>
                <Border Grid.Column="1"
                                    BorderBrush="{Binding Source={x:Static graphing:Constants.COLOR_BORDER}, Converter={converters:GraphColorToSolidBrushConverter}, FallbackValue=#00A000}" 
                                    BorderThickness="0,0,0,1"
                                    CornerRadius="4.5,4.5,0,0"
                                    Padding="1" 
                                    Background="{Binding HeaderColor, Converter={converters:NodeHeaderColorConverter}, FallbackValue=#505050}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <ContentControl Grid.Column="0" Content="{Binding Symbol, Converter={converters:NodeTypeToImageConverter}}" Margin="1,1,0,0">
                            <ContentControl.LayoutTransform>
                                <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                            </ContentControl.LayoutTransform>
                        </ContentControl>
                        <TextBlock Grid.Column="1" Grid.ColumnSpan="2" FontFamily="Segoe UI" Foreground="White" TextAlignment="Center" TextTrimming="CharacterEllipsis" Margin="15, -1, 15, 0" Text="{Binding Name, FallbackValue='Node Name'}"></TextBlock>

                        <!--#region Header Buttons-->
                        <!--this here will contain node buttons and will be data bound to the node header button collection-->
                        <!--#endregion-->

                        <!--<StackPanel Grid.Column="2" Orientation="Horizontal">
                                            <Ellipse Height="10" Margin="4, 0, 4, 0" Width="10" Fill="Red"></Ellipse>
                                        </StackPanel>-->
                    </Grid>


                </Border>

            </Grid>

            <!--#endregion Header-->

            <!--#region Body-->
            <ItemsControl x:Name="portsContainerItemsControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Ports}" ItemTemplateSelector="{DynamicResource templateSelector}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <local:PortsContainer PortCollection="{Binding Ports}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                        </local:PortsContainer>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

        </StackPanel>
    </Border>
    <TextBlock Grid.Row="1" IsHitTestVisible="False" Foreground="Yellow" TextWrapping="Wrap" Width="{Binding Source={x:Reference Name=node}, Path=ActualWidth}" Text="{Binding Comment}" Visibility="{Binding Path=IsCommentVisible, Converter={converters:BoolToVisibilityConverter}}"/>

</local:MemberContainer>
